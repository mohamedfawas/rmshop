services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: rmshop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s  # Wait for 10 seconds before starting health checks

  auth-service:
    build: ./rmshop-auth-service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rmshop
      - JWT_SECRET=your-secret-key
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=50051
    ports:
      - "50051:50051"
    depends_on:
      postgres:
        condition: service_healthy  # Wait for postgres to be healthy

  admin-service:
    build: ./rmshop-admin-service
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=50052
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rmshop
      - DB_SSLMODE=disable
    ports:
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_healthy  # Wait for postgres to be healthy

  user-service:
    build: ./rmshop-user-service
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=50053
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rmshop
      - DB_SSLMODE=disable
    ports:
      - "50053:50053"
    depends_on:
      postgres:
        condition: service_healthy  # Wait for postgres to be healthy
  
  api-gateway:
    build: ./rmshop-api-gateway
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - AUTH_SERVICE_ADDR=auth-service:50051
      - ADMIN_SERVICE_ADDR=admin-service:50052
      - USER_SERVICE_ADDR=user-service:50053
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - admin-service
      - user-service
volumes:
  postgres_data: